{"ast":null,"code":"var _jsxFileName = \"/_MORTEGA_/_CODE/REACT-CHILE/RESPALDO/workshop-react/src/components/sections/services/Services.jsx\";\n\n/* eslint-disable no-lone-blocks */\nimport React, { Component, Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport _ from 'lodash';\nimport Breadcrumb from '../../common/breadcrumb/Breadcrumb';\nimport WelcomeBox from '../../common/welcomeBox/WelcomeBox';\nimport InfoDashboard from '../../common/infoDashboard/infoDashboard';\nimport Table from '../../common/table/table';\nimport CardEvents from '../../common/cardEvents/CardEvents';\nimport { dataServices } from '../../../constants/dataMock';\nconst dataBreadcrumb = [{\n  'name': 'Servicios',\n  'url': '/services',\n  'isSelected': true\n}];\n\nclass Services extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      response: '',\n      totalRecords: 0\n    };\n\n    this.callApi = async () => {\n      const response = await fetch('/api/services/');\n      const body = await response.json();\n      if (response.status !== 200) throw Error(body.message);\n      return body;\n    };\n  }\n\n  componentDidMount() {\n    this.callApi().then(res => {\n      const count = _.countBy(res, {});\n\n      const rows = res.map(item => {\n        return {\n          Id: item.id,\n          Nombre: item.name\n        };\n      });\n      const columns = ['Id', 'Nombre'];\n      this.setState({\n        dataRows: rows,\n        dataColumns: columns,\n        totalRecords: count.true\n      });\n    }).then(res => console.log(res)).catch(err => console.log(err));\n  }\n\n  render() {\n    const _this$state = this.state,\n          dataColumns = _this$state.dataColumns,\n          dataRows = _this$state.dataRows,\n          totalRecords = _this$state.totalRecords,\n          routeReturn = _this$state.routeReturn;\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"columns\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"column is-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(Breadcrumb, {\n      data: dataBreadcrumb,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), React.createElement(WelcomeBox, {\n      title: \"Servicios prestados\",\n      subTitle: \"\",\n      color: \"is-danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"columns\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"column is-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(CardEvents, {\n      totalRecords: totalRecords,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(Table, {\n      dataColumns: dataColumns,\n      dataRows: dataRows,\n      routeReturn: '/orders',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    })))))));\n  }\n\n}\n\nexport default Services;\n{\n  /* <Button\n                              onClick={(event) => props.action.onClick(event, props.data)}\n                              color=\"primary\"\n                              variant=\"contained\"\n                              style={{textTransform: 'none'}}\n                              size=\"small\"\n                            >\n                              My Button\n                            </Button> */\n}","map":{"version":3,"sources":["/_MORTEGA_/_CODE/REACT-CHILE/RESPALDO/workshop-react/src/components/sections/services/Services.jsx"],"names":["React","Component","Fragment","Link","_","Breadcrumb","WelcomeBox","InfoDashboard","Table","CardEvents","dataServices","dataBreadcrumb","Services","state","response","totalRecords","callApi","fetch","body","json","status","Error","message","componentDidMount","then","res","count","countBy","rows","map","item","Id","id","Nombre","name","columns","setState","dataRows","dataColumns","true","console","log","catch","err","render","routeReturn"],"mappings":"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","sourcesContent":["/* eslint-disable no-lone-blocks */\nimport React, { Component, Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport _ from 'lodash';\n\nimport Breadcrumb from '../../common/breadcrumb/Breadcrumb';\nimport WelcomeBox from '../../common/welcomeBox/WelcomeBox';\nimport InfoDashboard from '../../common/infoDashboard/infoDashboard';\nimport Table from '../../common/table/table';\nimport CardEvents from '../../common/cardEvents/CardEvents';\n\nimport {dataServices} from '../../../constants/dataMock';\n\nconst dataBreadcrumb = [\n  { 'name': 'Servicios', 'url': '/services','isSelected':true },\n];\n\nclass Services extends Component {\n  state = {\n    response: '',\n    totalRecords: 0,\n  };\n\n  componentDidMount() {\n    this.callApi()\n      .then(res => {\n        const count= _.countBy(res,{});\n\n        const rows= res.map((item)=>{\n          return { \n            Id: item.id,\n            Nombre: item.name,\n          }\n        });\n        const columns = ['Id', 'Nombre']\n\n        this.setState({ \n          dataRows: rows, \n          dataColumns: columns, \n          totalRecords: count.true \n        });\n\n      })\n      .then(res => console.log(res))\n      .catch(err => console.log(err));\n  }\n  callApi = async () => {\n    const response = await fetch('/api/services/');\n    const body = await response.json();\n    if (response.status !== 200) throw Error(body.message);\n    return body;\n  };\n\n  render() {\n    const {dataColumns, dataRows, totalRecords, routeReturn} = this.state;\n    return (\n      <Fragment>\n        <div className=\"columns\">\n          <div className=\"column is-12\">\n            \n            <Breadcrumb data={dataBreadcrumb}/>\n            <WelcomeBox\n              title='Servicios prestados'\n              subTitle=''\n              color='is-danger'\n            />\n            <div className=\"columns\">\n              <div className=\"column is-12\">\n                  \n                <CardEvents totalRecords={totalRecords}>\n                  <Table \n                    dataColumns={dataColumns} \n                    dataRows={dataRows}\n                    routeReturn={'/orders'}  \n                  />\n                </CardEvents>\n              </div>\n            </div>\n           \n           \n\n            \n          </div>\n        </div>\n            \n      </Fragment>\n    );\n  }\n}\n\nexport default Services\n\n\n {/* <Button\n                              onClick={(event) => props.action.onClick(event, props.data)}\n                              color=\"primary\"\n                              variant=\"contained\"\n                              style={{textTransform: 'none'}}\n                              size=\"small\"\n                            >\n                              My Button\n                            </Button> */}"]},"metadata":{},"sourceType":"module"}