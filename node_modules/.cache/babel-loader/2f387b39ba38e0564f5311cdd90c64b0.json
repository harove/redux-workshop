{"ast":null,"code":"var _jsxFileName = \"/_MORTEGA_/_CODE/REACT-CHILE/RESPALDO/workshop-react/src/components/sections/orders/Orders.jsx\";\nimport React, { Component, Fragment } from 'react';\nimport _ from 'lodash';\nimport Breadcrumb from '../../common/breadcrumb/Breadcrumb';\nimport WelcomeBox from '../../common/welcomeBox/WelcomeBox';\nimport Table from '../../common/table/table';\nimport CardEvents from '../../common/cardEvents/CardEvents';\nconst dataBreadcrumb = [{\n  'name': 'Ordenes',\n  'url': '/orders',\n  'isSelected': true\n}];\n\nclass Orders extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      dataRows: [],\n      dataColumns: [],\n      totalRecords: 0\n    };\n\n    this.callApi = async () => {\n      const response = await fetch('/api/orders/');\n      const body = await response.json();\n      if (response.status !== 200) throw Error(body.message);\n      return body;\n    };\n  }\n\n  componentDidMount() {\n    this.callApi().then(res => {\n      const count = _.countBy(res, {});\n\n      const rows = res.map(item => {\n        return {\n          Id: item.clientId,\n          Nombre: item.clientName,\n          Descripción: item.descrip,\n          Servicio: item.servicesName,\n          Ingresado: item.usersName,\n          button: 'button'\n        };\n      });\n      const columns = ['Id', 'Nombre', 'Descripción', 'Servicio', 'Ingresado', 'button'];\n      this.setState({\n        dataRows: rows,\n        dataColumns: columns,\n        totalRecords: count.true\n      });\n    }).then(res => console.log(res)).catch(err => console.log(err));\n  }\n\n  render() {\n    const _this$state = this.state,\n          dataColumns = _this$state.dataColumns,\n          dataRows = _this$state.dataRows,\n          totalRecords = _this$state.totalRecords,\n          routeReturn = _this$state.routeReturn;\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"columns\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"column is-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(Breadcrumb, {\n      data: dataBreadcrumb,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), React.createElement(WelcomeBox, {\n      title: \"Ordenes de trabajo recibidas\",\n      subTitle: \"\",\n      color: \"is-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"columns\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"column is-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(CardEvents, {\n      totalRecords: totalRecords,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(Table, {\n      dataColumns: dataColumns,\n      dataRows: dataRows,\n      routeReturn: '/orders',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    })))))));\n  }\n\n}\n\nexport default Orders;","map":{"version":3,"sources":["/_MORTEGA_/_CODE/REACT-CHILE/RESPALDO/workshop-react/src/components/sections/orders/Orders.jsx"],"names":["React","Component","Fragment","_","Breadcrumb","WelcomeBox","Table","CardEvents","dataBreadcrumb","Orders","state","dataRows","dataColumns","totalRecords","callApi","response","fetch","body","json","status","Error","message","componentDidMount","then","res","count","countBy","rows","map","item","Id","clientId","Nombre","clientName","Descripción","descrip","Servicio","servicesName","Ingresado","usersName","button","columns","setState","true","console","log","catch","err","render","routeReturn"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport _ from 'lodash';\n\nimport Breadcrumb from '../../common/breadcrumb/Breadcrumb';\nimport WelcomeBox from '../../common/welcomeBox/WelcomeBox';\nimport Table from '../../common/table/table';\nimport CardEvents from '../../common/cardEvents/CardEvents';\n\nconst dataBreadcrumb = [\n  { 'name': 'Ordenes', 'url': '/orders','isSelected':true },\n];\n\n\n\nclass Orders extends Component {\n  state = {\n    dataRows: [],\n    dataColumns: [],\n    totalRecords: 0,\n  };\n\n  componentDidMount() {\n    this.callApi()\n      .then(res => {\n        const count= _.countBy(res,{});\n\n        const rows= res.map((item)=>{\n          return { \n            Id: item.clientId,\n            Nombre: item.clientName,\n            Descripción: item.descrip,\n            Servicio: item.servicesName,\n            Ingresado: item.usersName,\n            button: 'button'\n          }\n        });\n        const columns = ['Id', 'Nombre', 'Descripción', 'Servicio','Ingresado','button']\n\n        this.setState({ \n          dataRows: rows, \n          dataColumns: columns, \n          totalRecords: count.true \n        });\n\n      })\n      .then(res => console.log(res))\n      .catch(err => console.log(err));\n  }\n  callApi = async () => {\n    const response = await fetch('/api/orders/');\n    const body = await response.json();\n    if (response.status !== 200) throw Error(body.message);\n    return body;\n  };\n\n\n  render() {\n    const {dataColumns, dataRows, totalRecords, routeReturn} = this.state;\n    return (\n      <Fragment>\n        <div className=\"columns\">\n          <div className=\"column is-12\">\n            \n            <Breadcrumb data={dataBreadcrumb}/>\n            <WelcomeBox\n              title='Ordenes de trabajo recibidas'\n              subTitle=''\n              color='is-primary'\n            />\n\n            <div className=\"columns\">\n              <div className=\"column is-12\">\n                  \n                  <CardEvents totalRecords={totalRecords}>\n                      <Table \n                        dataColumns={dataColumns} \n                        dataRows={dataRows}\n                        routeReturn={'/orders'}  \n                      />\n                  </CardEvents>\n              \n              </div>\n            </div>\n           \n\n            \n          </div>\n        </div>\n            \n      </Fragment>\n    );\n  }\n}\n\nexport default Orders;\n"]},"metadata":{},"sourceType":"module"}