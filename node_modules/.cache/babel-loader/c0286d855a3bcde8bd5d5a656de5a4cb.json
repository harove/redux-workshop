{"ast":null,"code":"var _jsxFileName = \"/_MORTEGA_/_CODE/REACT-CHILE/RESPALDO/workshop-react/src/components/sections/home/Home.jsx\";\nimport React, { Component, Fragment } from 'react';\nimport _ from 'lodash';\nimport Breadcrumb from '../../common/breadcrumb/Breadcrumb';\nimport WelcomeBox from '../../common/welcomeBox/WelcomeBox';\nimport InfoDashboard from '../../common/infoDashboard/infoDashboard';\nimport Table from '../../common/table/table';\nimport CardEvents from '../../common/cardEvents/CardEvents';\nconst dataBreadcrumb = [{\n  'name': 'Dashboard',\n  'url': '/',\n  'isSelected': true\n}];\n\nclass Home extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      dataRows: [],\n      dataColumns: [],\n      totalOrders: 0,\n      totalServices: 0\n    };\n\n    this.callApi = async () => {\n      const response = await fetch('/api/orders/');\n      const body = await response.json();\n      if (response.status !== 200) throw Error(body.message);\n\n      const count = _.countBy(body, {});\n\n      const rows = body.map(item => {\n        return {\n          Id: item.clientId,\n          Nombre: item.clientName,\n          Descripción: item.descrip,\n          Servicio: item.servicesName,\n          Ingresado: item.usersName,\n          button: 'button'\n        };\n      });\n      const columns = ['Id', 'Nombre', 'Descripción', 'Servicio', 'Ingresado', 'button'];\n      this.setState({\n        dataRows: rows,\n        dataColumns: columns,\n        totalOrders: count.true\n      });\n      this.setLocalStorage('dataRows', JSON.stringify(rows));\n      this.setLocalStorage('dataColumns', JSON.stringify(columns));\n      this.setLocalStorage('totalOrders', count.true);\n    };\n\n    this.callApiServices = async () => {\n      const response = await fetch('/api/services/');\n      const body = await response.json();\n      if (response.status !== 200) throw Error(body.message);\n\n      const count = _.countBy(body, {});\n\n      this.setState({\n        totalServices: count.true\n      });\n      this.setLocalStorage('totalServices', count.true);\n      return body;\n    };\n  }\n\n  componentDidMount() {\n    this.callApiServices();\n    this.callApi(); // this.getLocalStorage();\n  } // getLocalStorage=()=>{\n  //   if (typeof(Storage) !== 'undefined') {\n  //     const dataRows = localStorage.getItem('dataRows');\n  //     const dataColumns = localStorage.getItem('dataColumns');\n  //     const totalOrders= localStorage.getItem('totalOrders');\n  //     const totalServices = localStorage.getItem('totalServices');\n  //     this.setState({ \n  //       dataRows: JSON.parse(dataRows), \n  //       dataColumns: JSON.parse(dataColumns), \n  //       totalOrders: JSON.parse(totalOrders),\n  //       totalServices: JSON.parse(totalServices)\n  //     });\n  //   }\n  // };\n  // setLocalStorage=(name, value)=>{\n  //   if (typeof(Storage) !== 'undefined') {\n  //     localStorage.setItem(name, value);\n  //     localStorage.Workshop = 'React-Chile';\n  //   }\n  // };\n\n\n  render() {\n    const _this$state = this.state,\n          dataColumns = _this$state.dataColumns,\n          dataRows = _this$state.dataRows,\n          totalOrders = _this$state.totalOrders,\n          totalServices = _this$state.totalServices; // console.log(this.state)\n\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"columns\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"column is-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(Breadcrumb, {\n      data: dataBreadcrumb,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }), React.createElement(WelcomeBox, {\n      title: \"Bienvenido Juanin Jan Jarri\",\n      subTitle: \"Que tengas un excelente d\\xEDa!\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }), React.createElement(\"section\", {\n      className: \"info-tiles\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"tile is-ancestor has-text-centered\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(InfoDashboard, {\n      title: totalOrders,\n      subTitle: \"Ordenes abiertas\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }), React.createElement(InfoDashboard, {\n      title: totalServices,\n      subTitle: \"Servicios\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }))))), React.createElement(\"div\", {\n      className: \"columns\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"column is-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(CardEvents, {\n      totalOrders: totalOrders,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(Table, {\n      dataColumns: dataColumns,\n      dataRows: dataRows,\n      routeReturn: '/',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["/_MORTEGA_/_CODE/REACT-CHILE/RESPALDO/workshop-react/src/components/sections/home/Home.jsx"],"names":["React","Component","Fragment","_","Breadcrumb","WelcomeBox","InfoDashboard","Table","CardEvents","dataBreadcrumb","Home","state","dataRows","dataColumns","totalOrders","totalServices","callApi","response","fetch","body","json","status","Error","message","count","countBy","rows","map","item","Id","clientId","Nombre","clientName","Descripción","descrip","Servicio","servicesName","Ingresado","usersName","button","columns","setState","true","setLocalStorage","JSON","stringify","callApiServices","componentDidMount","render"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport _ from 'lodash';\n\nimport Breadcrumb from '../../common/breadcrumb/Breadcrumb';\nimport WelcomeBox from '../../common/welcomeBox/WelcomeBox';\nimport InfoDashboard from '../../common/infoDashboard/infoDashboard';\nimport Table from '../../common/table/table';\nimport CardEvents from '../../common/cardEvents/CardEvents';\n\nconst dataBreadcrumb = [\n    { 'name': 'Dashboard', 'url': '/', 'isSelected':true, },\n  ];\n  \nclass Home extends Component {\n  state = {\n    dataRows: [],\n    dataColumns: [],\n    totalOrders: 0,\n    totalServices:0\n  };\n\n  componentDidMount() {\n    this.callApiServices();\n    this.callApi();\n\n    // this.getLocalStorage();\n\n    \n  }\n\n  // getLocalStorage=()=>{\n  //   if (typeof(Storage) !== 'undefined') {\n     \n  //     const dataRows = localStorage.getItem('dataRows');\n  //     const dataColumns = localStorage.getItem('dataColumns');\n  //     const totalOrders= localStorage.getItem('totalOrders');\n  //     const totalServices = localStorage.getItem('totalServices');\n\n  //     this.setState({ \n  //       dataRows: JSON.parse(dataRows), \n  //       dataColumns: JSON.parse(dataColumns), \n  //       totalOrders: JSON.parse(totalOrders),\n  //       totalServices: JSON.parse(totalServices)\n  //     });\n\n  //   }\n  // };\n\n  // setLocalStorage=(name, value)=>{\n    \n\n  //   if (typeof(Storage) !== 'undefined') {\n    \n  //     localStorage.setItem(name, value);\n  //     localStorage.Workshop = 'React-Chile';\n\n  //   }\n  // };\n\n\n  callApi = async () => {\n    const response = await fetch('/api/orders/');\n    const body = await response.json();\n\n    if (response.status !== 200) throw Error(body.message);\n    const count= _.countBy(body,{});\n\n    const rows= body.map((item)=>{\n      return { \n        Id: item.clientId,\n        Nombre: item.clientName,\n        Descripción: item.descrip,\n        Servicio: item.servicesName,\n        Ingresado: item.usersName,\n        button: 'button'\n      }\n    });\n    const columns = ['Id', 'Nombre', 'Descripción', 'Servicio','Ingresado','button']\n\n    this.setState({ \n      dataRows: rows, \n      dataColumns: columns, \n      totalOrders: count.true,\n    });\n    this.setLocalStorage('dataRows', JSON.stringify(rows));\n    this.setLocalStorage('dataColumns', JSON.stringify(columns));\n    this.setLocalStorage('totalOrders', count.true);\n  };\n\n  callApiServices = async() =>{\n    const response = await fetch('/api/services/');\n    const body = await response.json();\n    if (response.status !== 200) throw Error(body.message);\n    const count= _.countBy(body,{});\n    this.setState({ \n      totalServices: count.true \n    });\n    this.setLocalStorage('totalServices', count.true);\n    return body;\n  };\n\n  render() {\n    const {dataColumns, dataRows, totalOrders, totalServices} = this.state;\n// console.log(this.state)\n    return (\n        <Fragment>\n        {/* <code>{JSON.stringify(this.state)}</code> */}\n        <div className=\"columns\">\n          <div className=\"column is-12\">\n            \n            <Breadcrumb data={dataBreadcrumb}/>\n            \n            <WelcomeBox\n              title='Bienvenido Juanin Jan Jarri'\n              subTitle='Que tengas un excelente día!'\n            />\n\n            <section className=\"info-tiles\">\n              <div className=\"tile is-ancestor has-text-centered\">\n\n                <InfoDashboard \n                  title={totalOrders}\n                  subTitle=\"Ordenes abiertas\"\n                />\n                <InfoDashboard \n                  title={totalServices}\n                  subTitle=\"Servicios\"\n                />\n              \n              </div>\n            </section>\n\n            \n          </div>\n        </div>\n            \n        <div className=\"columns\">\n            <div className=\"column is-12\">\n                \n              <CardEvents totalOrders={totalOrders}>\n                <Table \n                  dataColumns={dataColumns} \n                  dataRows={dataRows}\n                  routeReturn={'/'}  \n                />\n              </CardEvents>\n            \n            </div>\n        </div>\n        </Fragment>\n  \n  \n    );\n  }\n}\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}